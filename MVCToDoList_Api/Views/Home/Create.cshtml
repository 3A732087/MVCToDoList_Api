@model MVCToDoList_Api.Models.ToDoList

@{
    ViewBag.Title = "新增待辦事項";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<nav class="navbar navbar-expand-lg navbar-light " style="background-color: #c7e2fc;">
    <a class="navbar-brand" href="/Home/ToDoList">待辦事項</a>
    <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarNavAltMarkup" aria-controls="navbarNavAltMarkup" aria-expanded="false" aria-label="Toggle navigation">
        <span class="navbar-toggler-icon"></span>
    </button>
    <div class="collapse navbar-collapse" id="navbarNavAltMarkup">
        <div class="navbar-nav">
            <a class="nav-link" href="/Home/ToDoList">首頁</a>
        </div>
        <div class="navbar-nav">
            <a class="nav-link" href="/Home/Create">新增</a>
        </div>
    </div>
</nav>

@using (Html.BeginForm(null, null, FormMethod.Post, new { id = "insertForm" }))
{
                @Html.AntiForgeryToken()
                <div class="col-12 col-sm-12 col-md-12 col-lg-12 col-xl-12 mt-4">
        <div class="card  ">
            <div class="card-header">
                新增待辦事項
            </div>
            <div class="card-body">

                <form>
                    <div class="form-group">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <label for="task-name" class="control-label">@Html.DisplayNameFor(model => model.Title)</label>
                        @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "col-sm-12 col-lg-12 form-control", required = "required" } })
                        @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        <label for="task-level" class="control-label">@Html.DisplayNameFor(model => model.Level)</label>
                        @Html.EditorFor(model => model.Level, new { htmlAttributes = new { @class = "col-sm-12 col-lg-12 form-control", required = "required" } })
                        @Html.ValidationMessageFor(model => model.Level, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        <label for="task-deadline" class="control-label">@Html.DisplayNameFor(model => model.Deadline)</label>
                        @Html.EditorFor(model => model.Deadline, new { htmlAttributes = new { @class = "col-sm-12 col-lg-12 form-control", type = "date", required = "required" } })
                        @Html.ValidationMessageFor(model => model.Deadline, "", new { @class = "text-danger" })
                    </div>

                    <button type="submit" class="btn btn-light" value="Add Task" onclick="doInsert()"><i class="fas fa-plus"></i> Add Task</button>
                </form>
            </div>
        </div>
    </div>
}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
<script>

    function doInsert() {
        var formData = $('#insertForm').serializeArray();
        $.ajax({
            url: "/api/ToDoListApi",
            method: "POST",
            data: formData,
            success: function (result) {
                alert(result.Message);
                window.location = "/Home/ToDoList";
            },
            error: function (xhr, textStatus, error) {
                xhr.responseJSON.ExceptionMessage;
            }

        })
    }

</script>
}
